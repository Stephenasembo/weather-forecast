const errorDivs=[],domElements={locationInput:document.querySelector("input"),submitBtn:document.querySelector("#submitBtn"),todayDiv:document.querySelector("#today"),forecastDiv:document.querySelector("#forecast"),forecastInput:document.querySelector("#forecastLength"),weatherInfo:document.querySelector("#weatherInfo"),heading:document.querySelector("#heading")};let queryUrl;const weatherKey="28SUAPEDEBK3W6FMPLKTFMRFY",gifyKey="7uCiKGp7r7hEKsspvlhqflcCvrQHKFis";let locationValue,forecastLength=null,shouldConvert=!1;function displayLoading(){domElements.todayDiv.innerHTML="",domElements.forecastDiv.innerHTML="";const e=document.createElement("div");return e.textContent="Wait a moment while we load your data",domElements.weatherInfo.appendChild(e),e.classList.add("loading"),errorDivs.push(e),e}function clearForm(e){domElements.locationInput.value="",domElements.forecastInput.value="",e&&(e.checked=!1)}function tempConversion(e){return 5*(e-32)/9}function removeError(e){domElements.weatherInfo.removeChild(e)}function unpackData(e){const{temp:t,conditions:o,cloudcover:n,feelslike:i,humidity:r,icon:s,visibility:c,windspeed:a,precip:d,snow:l}=e.currentConditions,p={temp:t,conditions:o,cloudcover:n,feelslike:i,humidity:r,icon:s,visibility:c,windspeed:a,precip:d,snow:l};return p.description=e.description,shouldConvert&&(p.temp=tempConversion(p.temp)),{today:p,forecast:e.days}}function displayCurrentDay(e){domElements.heading.textContent=`Displaying Weather Conditions For ${locationValue}`,domElements.todayDiv.innerHTML="";const t=e;let o;if(t.precip||(t.precip=0),shouldConvert?(t.temp=tempConversion(e.temp),o="&deg;C"):o="&deg;F",domElements.todayDiv.innerHTML=`\n  <div class = 'dataDiv'>\n    <p>Today's weather condition is: ${e.conditions}.</p>\n    <p>The outlook is: ${e.description}.</p>\n    <p>Today's temperature is: ${e.temp} ${o}.</p>\n    <p>The cloud cover is: ${e.cloudcover} %.</p>\n    <p>The relative humidity is: ${e.humidity} %.</p>\n    <p>The visibility is: ${e.visibility}</p>\n    <p>The amount of precipitation fell or predicted to fall is: ${e.precip}.</p>\n    <p>The wind speed is: ${e.windspeed} knots.</p>\n  </div>`,e.snow){const t=document.createElement("p"),o=document.querySelector(".dataDiv");t.innerHTML=`The amount of snow fell or predicted to fall is ${e.snow}.`,o.appendChild(t)}}function displayForecast(e){domElements.forecastDiv.innerHTML="",e.slice(1,forecastLength).forEach((e=>{const t=document.createElement("div"),{temp:o,conditions:n,cloudcover:i,feelslike:r,humidity:s,icon:c,visibility:a,windspeed:d,precip:l,snow:p}=e,u={temp:o,conditions:n,cloudcover:i,feelslike:r,humidity:s,icon:c,visibility:a,windspeed:d,precip:l,snow:p};u.description=e.description;const m=e.datetime;let y;if(u.precip||(u.precip=0),y=shouldConvert?"&deg;C":"&deg;F",t.innerHTML=`\n      <p>${m}'s weather condition is: ${u.conditions}.</p>\n      <p>The outlook is: ${u.description}.</p>\n      <p>Today's temperature is: ${u.temp} ${y}.</p>\n      <p>The cloud cover is: ${u.cloudcover} %.</p>\n      <p>The relative humidity is: ${u.humidity} %.</p>\n      <p>The visibility is: ${u.visibility}</p>\n      <p>The amount of precipitation fell or predicted to fall is: ${u.precip}.</p>\n      <p>The wind speed is: ${u.windspeed} knots.</p>`,u.snow){const e=document.createElement("p");e.innerHTML=`The amount of snow fell or predicted to fall is: ${u.snow}.`,t.appendChild(e)}domElements.forecastDiv.appendChild(t),t.classList.add("forecastDay")}))}async function changeBackground(e){const t=`https://api.giphy.com/v1/gifs/translate?api_key=${gifyKey}&s=${e}`;try{let e=await fetch(t,{mode:"cors"});if(e.ok){e=await e.json();const t=e.data.images.original.url,o=document.querySelector(".dataDiv");o.style.backgroundImage=`url(${t})`,o.style.backgroundSize="cover"}}catch(e){console.log(e)}}async function changeForecastBackground(e){let t=document.querySelectorAll(".forecastDay");t=Array.from(t);const o=e.slice(1,forecastLength),n=[];o.forEach((e=>{const t=`https://api.giphy.com/v1/gifs/translate?api_key=${gifyKey}&s=${e.icon}`;fetch(t,{mode:"cors"}).then((e=>{e.ok&&e.json().then((e=>{const t=e.data.images.original.url;n.push(t)}))}))}));for(let e=0;e<n.length;e+=1)t[e].style.backgroundImage=`url(${n[e]})`,t[e].style.backgroundSize="cover"}async function getWeatherData(){let e;try{e=displayLoading();let t=await fetch(queryUrl,{mode:"cors"});if(t.ok){errorDivs.forEach((e=>{removeError(e)})),t=await t.json();const e=unpackData(t);displayCurrentDay(e.today),displayForecast(e.forecast),changeBackground(e.today.icon),changeForecastBackground(e.forecast)}else 400===t.status?e.textContent="Oops an error occured!\n      Location entered may be invalid.":e.textContent="Oops an error occured!"}catch(t){e.textContent="Oops an error occured!"}}function getUserValues(e){e.preventDefault();const t=document.querySelector('input[type="checkbox"]:checked');t&&(shouldConvert=!0),locationValue=domElements.locationInput.value,locationValue?domElements.forecastInput.value<0||domElements.forecastInput.value>14?displayLoading().textContent="Oops an error occured! Minimum days for forecast is 0 and maximum is 15!":(queryUrl=`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${locationValue}?key=${weatherKey}`,forecastLength=Number(domElements.forecastInput.value)+1,clearForm(t),getWeatherData()):displayLoading().textContent="Oops an error occured location can not be empty!"}domElements.submitBtn.addEventListener("click",getUserValues);